{"ast":null,"code":"var _jsxFileName = \"/Users/lambdajohn/web30/JS-FrontEnd-by-jheinz1999/src/components/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n/*\n\nWe want PrivateRoute to be a sort of replacement/upgrade for the Route component\nWe want it to have the same API as Route\nWe will have it render a Route and pass all the props through into the Route component\nIf the user is logged in, we will render the component that the Route received\nOtherwise, we will redirect the user to the Login page\n\n*/\n\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: () => {\n      if (localStorage.getItem('token')) return /*#__PURE__*/React.createElement(Component, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 18\n        }\n      });\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lambdajohn/web30/JS-FrontEnd-by-jheinz1999/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","rest","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA;;;;;;;;;;AAUA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AAEtE,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAE,MAAM;AAC7B,UAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EACE,oBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF;AAYD","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n/*\n\nWe want PrivateRoute to be a sort of replacement/upgrade for the Route component\nWe want it to have the same API as Route\nWe will have it render a Route and pass all the props through into the Route component\nIf the user is logged in, we will render the component that the Route received\nOtherwise, we will redirect the user to the Login page\n\n*/\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n\n  return (\n\n    <div>\n      <Route {...rest} render={() => {\n        if (localStorage.getItem('token'))\n          return <Component />\n        return <Redirect to='/login'/>\n      }}/>\n    </div>\n\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}